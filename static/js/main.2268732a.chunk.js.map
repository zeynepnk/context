{"version":3,"sources":["Context/ThemeContext.js","ThemeToggler.jsx","Header.jsx","Colors.js","MainWithFunction.js","MainWithClass.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","themeTogglerStyle","cursor","ThemeToggler","useContext","themeMode","setThemeMode","style","onClick","title","headerStyles","padding","display","justifyContent","alignItems","Header","AppTheme","light","textColor","backgroundColor","dark","Main","theme","currentTheme","color","state","Consumer","Component","App","themeHook","useState","Provider","value","MainWithClass","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAEeA,G,MADMC,IAAMC,cAAc,CAAC,QAAS,gB,cCG7CC,EAAoB,CACxBC,OAAQ,WAmBKC,EAjBM,WACnB,MAAkCC,qBAAWN,GAA7C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,OACE,qBACEC,MAAON,EACPO,QAAS,WACPF,EAA2B,UAAdD,EAAwB,OAAS,UAHlD,SAME,uBAAMI,MAAM,eAAZ,UACE,4CADF,SAC4B,IACX,UAAdJ,EAAwB,eAAO,qBCflCK,EAAe,CACnBC,QAAS,OACTC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAWCC,EATA,WACb,OACE,yBAAQR,MAAOG,EAAf,UACE,6CACA,cAAC,EAAD,QCFSM,EAXE,CACfC,MAAO,CACLC,UAAW,OACXC,gBAAiB,QAEnBC,KAAM,CACJF,UAAW,OACXC,gBAAiB,SCcNE,EAjBF,WACX,IAAMC,EAAQlB,qBAAWN,GAAc,GACjCyB,EAAeP,EAASM,GAC9B,OACE,uBACEf,MAAO,CACLI,QAAS,OACTQ,gBAAgB,GAAD,OAAKI,EAAaJ,iBACjCK,MAAM,GAAD,OAAKD,EAAaL,YAJ3B,UAOE,oDACA,yD,4BCeSG,E,kDA1Bb,aAAe,IAAD,8BACZ,gBACKI,MAAQ,GAFD,E,0CAId,WACE,OACE,cAAC,EAAaC,SAAd,UACG,YAAc,IAAZJ,EAAW,oBACNC,EAAeP,EAASM,GAC9B,OACE,uBACEf,MAAO,CACLI,QAAS,OACTQ,gBAAgB,GAAD,OAAKI,EAAaJ,iBACjCK,MAAM,GAAD,OAAKD,EAAaL,YAJ3B,UAOE,iDACA,yE,GAnBKS,aCeJC,MAbf,WACE,IAAMC,EAAYC,mBAAS,SAC3B,OACE,cAAC,EAAaC,SAAd,CAAuBC,MAAOH,EAA9B,SACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACI,EAAD,UCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2268732a.chunk.js","sourcesContent":["import React from \"react\";\r\nconst ThemeContext = React.createContext([\"light\", () => {}]);\r\nexport default ThemeContext;\r\n","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"./Context/ThemeContext\";\r\n// import { FaArrowRight } from \"react-icons/fa\";\r\n\r\nconst themeTogglerStyle = {\r\n  cursor: \"pointer\",\r\n};\r\nconst ThemeToggler = () => {\r\n  const [themeMode, setThemeMode] = useContext(ThemeContext);\r\n  return (\r\n    <div\r\n      style={themeTogglerStyle}\r\n      onClick={() => {\r\n        setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\");\r\n      }}\r\n    >\r\n      <span title=\"switch theme\">\r\n        <h2>Theme Mode</h2>Click {\" \"}\r\n        {themeMode === \"light\" ? \"üåô\" : \"‚òÄÔ∏è\"}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggler;\r\n","import React from \"react\";\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst headerStyles = {\r\n  padding: \"1rem\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n};\r\nconst Header = () => {\r\n  return (\r\n    <header style={headerStyles}>\r\n      <h1>Context API</h1>\r\n      <ThemeToggler />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const AppTheme = {\r\n  light: {\r\n    textColor: \"#000\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  dark: {\r\n    textColor: \"#fff\",\r\n    backgroundColor: \"#333\",\r\n  },\r\n};\r\n\r\nexport default AppTheme;\r\n","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"./Context/ThemeContext\";\r\nimport AppTheme from \"./Colors\";\r\n\r\nconst Main = () => {\r\n  const theme = useContext(ThemeContext)[0];\r\n  const currentTheme = AppTheme[theme];\r\n  return (\r\n    <main\r\n      style={{\r\n        padding: \"1rem\",\r\n        backgroundColor: `${currentTheme.backgroundColor}`,\r\n        color: `${currentTheme.textColor}`,\r\n      }}\r\n    >\r\n      <h1>Main With Function</h1>\r\n      <p>This is a paragraph </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport ThemeContext from \"./Context/ThemeContext\";\r\nimport AppTheme from \"./Colors\";\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {([theme]) => {\r\n          const currentTheme = AppTheme[theme];\r\n          return (\r\n            <main\r\n              style={{\r\n                padding: \"1rem\",\r\n                backgroundColor: `${currentTheme.backgroundColor}`,\r\n                color: `${currentTheme.textColor}`,\r\n              }}\r\n            >\r\n              <h1>Main With Class</h1>\r\n              <p>This is a paragraph with Class</p>\r\n            </main>\r\n          );\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import React, { useState } from \"react\";\nimport ThemeContext from \"./Context/ThemeContext\";\nimport Header from \"./Header\";\nimport Main from \"./MainWithFunction\";\nimport MainWithClass from \"./MainWithClass\";\n\nfunction App() {\n  const themeHook = useState(\"light\");\n  return (\n    <ThemeContext.Provider value={themeHook}>\n      <div>\n        <Header />\n        <Main />\n        <MainWithClass />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}